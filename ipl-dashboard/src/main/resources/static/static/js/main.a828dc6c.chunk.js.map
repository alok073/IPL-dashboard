{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","isTie","result","cardColor","matchResult","resultMargin","className","to","date","venue","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","moreLinkRoute","process","useEffect","a","fetch","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","year","years","i","push","Year","style","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","NavBar","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a828dc6c.chunk.js","sourcesContent":["import { React} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n  if(!match) return null;\r\n\r\n  //only to display the name of the opponent team\r\n  const otherTeam = match.team1 === teamName? match.team2 : match.team1;\r\n\r\n  //make the opponent team as a hyperlink\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  const isTie = match.result === 'tie' ? true : false;\r\n\r\n  var cardColor = isTie ? 'MatchDetailCard tie-card' : isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card';\r\n  var matchResult = \"\";\r\n    if(isTie) {\r\n        matchResult = \"There was a tie between \" + match.team1 + \" and \" + match.team2;   \r\n    } else {\r\n        matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\r\n    }\r\n\r\n  return (\r\n    <div className={cardColor}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{matchResult} </h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { React} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n\r\n  //only to display the name of the opponent team\r\n  const otherTeam = match.team1 === teamName? match.team2 : match.team1;\r\n\r\n  //make the opponent team as a hyperlink\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    // <div className = \"MatchSmallCard\">\r\n    //   <h4> vs <Link to={otherTeamRoute}>{otherTeam}</Link> </h4>\r\n    //   <p> {match.matchWinner} won by {match.resultMargin} {match.result} </p>\r\n    // </div>\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <span className=\"vs\">vs</span>\r\n      <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </p>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams,Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n\r\n  const moreLinkRoute = `/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`;\r\n\r\n  /**\r\n   * Making a REST API call\r\n   */\r\n  useEffect(\r\n    () => {\r\n      const fetchTeam = async () => {\r\n        const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n        const data = await response.json();\r\n        //console.log(data);\r\n        //setting the data field in to the state of the component\r\n        setTeam(data);\r\n      };\r\n\r\n      fetchTeam();\r\n    }, [teamName]\r\n  );\r\n\r\n  /**\r\n   * Condition to check if user enters wrong teamName or doesn't enter anything\r\n   */\r\n  if (!team || !team.teamName) {\r\n    return <h1>Team not found</h1>\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n\r\n      <div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n            data={[\r\n                { \r\n                  title: 'Losses', \r\n                  value: team.totalMatches - team.totalWins, \r\n                  color: '#a34d5d' \r\n                },\r\n                { \r\n                  title: 'Wins', \r\n                  value: team.totalWins, \r\n                  color: '#4da375' \r\n                },\r\n            ]}\r\n            />\r\n      </div>\r\n\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n      </div>\r\n\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n\r\n      <div className=\"more-link\">\r\n        <Link to = {moreLinkRoute}>More..</Link>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","/* eslint-disable eqeqeq */\r\nimport { React } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ( {teamName} ) => {\r\n\r\n    const {year} = useParams()\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for(let i=startYear; i<=endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className = \"YearSelector\">\r\n            { years.map(Year => (\r\n                <li key={Year}>\r\n                    <Link to={`/teams/${teamName}/matches/${Year}`}>\r\n                        {year==Year ? <span style={{color : 'yellow'}}>{year}</span> : Year }\r\n                    </Link>\r\n                </li> \r\n                ))}\r\n        </ol>\r\n        \r\n    );\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n  const [matches, setMatches] = useState([]);\r\n  const { teamName, year } = useParams();\r\n\r\n  /**\r\n   * Making a REST API call\r\n   */\r\n   useEffect(\r\n    () => {\r\n      const fetchMatches = async () => {\r\n        const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n        const data = await response.json();\r\n        //console.log(data);\r\n        //setting the data field in to the state of the component\r\n        setMatches(data);\r\n      };\r\n\r\n      fetchMatches();\r\n    }, [teamName, year]\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"MatchPage\" >\r\n      <div className=\"year-selector\">\r\n        <h4>Select Year</h4>\r\n        <YearSelector teamName={teamName} />\r\n      </div>\r\n      <div>\r\n      <h2 className = \"page-heading\">{teamName} matches in the year {year}</h2>\r\n        {\r\n          matches.map(match => <MatchDetailCard key={match.id} teamName = {teamName} match={match} />)\r\n        }\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import { React} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1><Link to={`/teams/${teamName}`}>{teamName}</Link></h1>\r\n        </div>\r\n    );\r\n\r\n}","import { React, useEffect, useState } from 'react';\r\n\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n          const fetchAllTeams = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n            const data = await response.json();\r\n            //console.log(data);\r\n            //setting the data field in to the state of the component\r\n            setTeams(data);\r\n          };\r\n    \r\n          fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n          <div className=\"header-section\">\r\n            <h1 className=\"app-name\">IPL-dashboard</h1>\r\n          </div>\r\n    \r\n          <div className=\"team-grid\">\r\n            {\r\n                teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)\r\n            }\r\n          </div>\r\n    \r\n        </div>\r\n    \r\n        \r\n      );\r\n\r\n}","import { React } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss';\r\n\r\nexport const NavBar = () => {\r\n\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Link to={``}>{'Team Dashboard'}</Link>\r\n    </div>\r\n  );\r\n}","//import './App.css';\nimport './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nimport { NavBar } from './components/NavBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}